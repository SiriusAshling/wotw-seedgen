!use_icon(message_icon, "assets/icons/game/message.png")

!include("difficulty_select")
!use("difficulty_select", critical)
!include("bind_pointer")
!use("bind_pointer", bind_pointer)
!use("bind_pointer", close)

!state(first_time, Boolean)

on reload if critical {
    update_wheel_unlocked()
    update_wolfshift_wheel()
    update_overly_cryptic_easter_egg_hint_wheel()
    update_numbers_wheel()
    update_poem_wheel()
    update_cells_wheel()
    update_abbreviations_wheel()
    update_wtf_wheel() // TODO what was this?
    update_ghosts_wheel()
    update_list_wheel()
}

on change MarshSpawn.LupoMap if critical update_wheel_unlocked()
on change WestHollow.LupoMap if critical update_wheel_unlocked()
on change MidnightBurrows.LupoMap if critical update_wheel_unlocked()
on change InnerWellspring.LupoMap if critical update_wheel_unlocked()
on change EastPools.LupoMap if critical update_wheel_unlocked()
on change LowerDepths.LupoMap if critical update_wheel_unlocked()
on change LowerWastes.LupoMap if critical update_wheel_unlocked()
on change LowerReach.LupoMap if critical update_wheel_unlocked()
on change WillowsEnd.LupoMap if critical update_wheel_unlocked()
fun update_wheel_unlocked() {
    if MarshSpawn.LupoMap
    || WestHollow.LupoMap
    || MidnightBurrows.LupoMap
    || InnerWellspring.LupoMap
    || EastPools.LupoMap
    || LowerDepths.LupoMap
    || LowerWastes.LupoMap
    || LowerReach.LupoMap
    || WillowsEnd.LupoMap {
        set_wheel_item_data(
            "root",
            WheelItemPosition::LeftBottom,
            "Lupo's Secrets",
            "Recall Secrets heard from Lupo\n[Ability1] Recall",
            message_icon,
            switch_wheel("lupo_secrets"),
        )
    }
}

on change MarshSpawn.LupoMap if critical update_wolfshift_wheel()
fun update_wolfshift_wheel() {
    if MarshSpawn.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::Top,
            "Inkwater Lupo",
            "[Ability1] Recall",
            message_icon,
            wolfshift(),
        )
    }
}
on change WestHollow.LupoMap if critical update_overly_cryptic_easter_egg_hint_wheel()
fun update_overly_cryptic_easter_egg_hint_wheel() {
    if WestHollow.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::TopRight,
            "Hollow Lupo",
            "[Ability1] Recall",
            message_icon,
            overly_cryptic_easter_egg_hint(),
        )
    }
}
on change MidnightBurrows.LupoMap if critical update_numbers_wheel()
fun update_numbers_wheel() {
    if MidnightBurrows.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::RightTop,
            "Burrows Lupo",
            "[Ability1] Recall",
            message_icon,
            numbers(),
        )
    }
}
on change InnerWellspring.LupoMap if critical update_poem_wheel()
fun update_poem_wheel() {
    if InnerWellspring.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::Right,
            "Wellspring Lupo",
            "[Ability1] Recall",
            message_icon,
            poem(),
        )
    }
}
on change EastPools.LupoMap if critical update_cells_wheel()
fun update_cells_wheel() {
    if EastPools.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::RightBottom,
            "Luma Lupo",
            "[Ability1] Recall",
            message_icon,
            cells(),
        )
    }
}
on change LowerDepths.LupoMap if critical update_abbreviations_wheel()
fun update_abbreviations_wheel() {
    if LowerDepths.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::BottomRight,
            "Depths Lupo",
            "[Ability1] Recall",
            message_icon,
            abbreviations(),
        )
    }
}
on change LowerWastes.LupoMap if critical update_wtf_wheel()
fun update_wtf_wheel() {
    if LowerWastes.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::Bottom,
            "Wastes Lupo",
            "[Ability1] Recall",
            message_icon,
            wtf(),
        )
    }
}
on change LowerReach.LupoMap if critical update_ghosts_wheel()
fun update_ghosts_wheel() {
    if LowerReach.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::BottomLeft,
            "Reach Lupo",
            "[Ability1] Recall",
            message_icon,
            ghosts(),
        )
    }
}
on change WillowsEnd.LupoMap if critical update_list_wheel()
fun update_list_wheel() {
    if WillowsEnd.LupoMap {
        set_wheel_item_data(
            "lupo_secrets",
            WheelItemPosition::LeftBottom,
            "Willow's End Lupo",
            "[Ability1] Recall",
            message_icon,
            list(),
        )
    }
}

fun secret_message() {
    if first_time set_string("first_time", "")
    if first_time == false {
        set_string("first_time", "(Secrets are #never# required progression. Recall secrets in the [RandoWheel] #randomizer wheel#)\n")
        store(first_time, true)
    }
    store(bind_pointer, close)
}

on MarshSpawn.LupoMap {
    if critical wolfshift()
    if critical == false {
        item_message("@Reckless@")
        store(shards.reckless, true)
    }
}
on WestHollow.LupoMap {
    if critical overly_cryptic_easter_egg_hint()
    if critical == false {
        item_message("*Energy Harvest*")
        store(shards.energyHarvest, true)
    }
}
on MidnightBurrows.LupoMap {
    if critical numbers()
    if critical == false {
        item_message("*Catalyst*")
        store(shards.catalyst, true)
    }
}
on InnerWellspring.LupoMap {
    if critical poem()
    if critical == false {
        item_message("@Turmoil@")
        store(shards.turmoil, true)
    }
}
on InnerWellspring.LupoMap {
    if critical cells()
    if critical == false {
        item_message("#Magnet#")
        store(shards.magnet, true)
    }
}
on LowerDepths.LupoMap {
    if critical abbreviations()
    if critical == false {
        item_message("#Resilience#")
        store(shards.resilience, true)
    }
}
on LowerWastes.LupoMap {
    if critical wtf()
    if critical == false {
        item_message("$Lifeforce$")
        store(shards.lifeforce, true)
    }
}
on LowerReach.LupoMap {
    if critical ghosts()
    if critical == false {
        item_message("@Life Pact@")
        store(shards.lifePact, true)
    }
}
on WillowsEnd.LupoMap {
    if critical list()
    if critical == false {
        item_message("@Last Stand@")
        store(shards.lastStand, true)
    }
}

fun wolfshift() {
    secret_message()
    free_message(
        "active_message",
        "S;; Drvtryd str pm;u {trdrmy om yjr Vtoyovs; Foggovi;yu/ Upi mrbrt jsbr yp [;su pm Ns;smvrf/\n" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
fun overly_cryptic_easter_egg_hint() {
    secret_message()
    free_message(
        "active_message",
        "Above Waters\nDrowned a Tree\nKeep watching\nOver me\n" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
fun numbers() {
    secret_message()
    free_message(
        "active_message",
        "~ 1989145                          165186532091514                 ~\n" +
        "~                               156                                                                ~\n" +
        "~                                                715124514                               ~\n" +
        "~            195511                                                         15185     ~\n" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
fun poem() {
    secret_message()
    free_message(
        "active_message",
        "A peaceful garden\n" +
        "May draw the light\n" +
        "Should seeds' shells harden\n" +
        "You lost the fight" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
fun cells() {
    secret_message()
    free_message(
        "active_message",
        "~                          <icon>XX</>                              <icon>XX</> ~\n" +
        "~                          <icon>XX</>                              <icon>XX</> ~\n" +
        "~ <icon>XX</>                              <icon>XX</>                          ~\n" +
        "~ <icon>XX</>                              <icon>XX</>                          ~" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
fun abbreviations() {
    secret_message()
    free_message(
        "active_message",
        "sPtRhOwAmAwEpOwOdEp" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
fun wtf() {
    secret_message()
    free_message(
        "active_message",
        "OrehhOiheniherDpeeesTdaHTnertSens" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
fun ghosts() {
    secret_message()
    free_message(
        "active_message",
        "To join the ghosts who always hurry\n" +
        "You seek who saw them run and play\n" +
        "When pleasant memories you carry\n" +
        "Their secret he may give away" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
fun list() {
    secret_message()
    free_message(
        "active_message",
        "?list=PLnkIQth0QH84VU3-M7u06H1y54Ej01aJ7" +
        get_string("first_time") +
        "[Binding1] Ok"
    )
}
