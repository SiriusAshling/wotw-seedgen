#hide
#name("Seed Core")
#description("Essentials for the randomizer to function")

// TODO test
// TODO check over these, for instance why risingPedestals?
// TODO add comments
on spawn {
    store(randoConfig.inLogicFilterEnabled, true)
    store(randoState.regenTreeDrained, true)
    store(npcsStateGroup.fastTravelEnabledUberState, 1)
    store(gromShop.spiritWellBought, true)
    store(gladesProjects.spiritWellBuilt, true)
    store(gromShop.beautifyBought, true)
    store(gladesProjects.beautifyBuilt, true)
    store(swampStateGroup.torchHolded, true)
    store(kwolokGroupDescriptor.risingPedestals, true)
    store(inkwaterMarshStateGroup.mokiTorchPlayed, true)
    store(swampStateGroup.leverA, true)
    store(_petrifiedForestGroup.narratorLineShown, true)
    store(58674|32369, true) // _petrifiedForestGroup.powlVignettePlayed
    store(58674|14539, true) // _petrifiedForestGroup.powlVignettePlayed
    store(_petrifiedForestGroup.skeletonState, true)
    store(_petrifiedForestGroup.narratorLineShownHowl, true)
    store(_petrifiedForestGroup.featherVignettePlayed, true)
    store(_petrifiedForestGroup.petrifiedOwlStalkSequenceCompleted, true)
    store(questUberStateGroup.winterForestWispQuestUberState, 1)
    store(questUberStateGroup.lagoonWispQuestUberState, 1)
    store(questUberStateGroup.desertWispQuestUberState, 1)
    store(questUberStateGroup.mouldwoodDepthsWispQuestUberState, 1)
    store(_petrifiedForestGroup.petrifiedForestNewTransitionOriVignettePlayed, true)
    store(_petrifiedForestGroup.petrifiedForestNewTransitionKuVignettePlayed, 2)
    store(questUberStateGroup.lastGlobalEvent, 2)
    store(questUberStateGroup.findKuQuest, 4)
    store(questUberStateGroup.lookForKuQuestUberState, 4)
    store(swampStateGroup.interactedWithOpher, true)
}

// TODO fully support random grom shop and remove this
on reload {
    set_shop_item_data(
        gromShop.spiritWellBought,
        1,
        "Repair the Spirit Well",
        "They say the spirit of old could #warp# from one well to another. Perhaps if we #repaired this well with Gorlek Ore#, returning to the #Wellspring Glades# would be even easier.",
        GromIcon::RepairTheSpiritWell,
    )
    set_shop_item_data(
        gromShop.housesABought,
        4,
        "Dwelling Repairs",
        "It's a shame how those old Moki dwellings are in shambles. Maybe if we #fixed them up# the Moki could #move back to the Glades#?",
        GromIcon::DwellingRepairs,
    )
    set_shop_item_data(
        gromShop.housesBBought,
        6,
        "Roofs Over Heads",
        "Time to #build some more housing#! Now on the big tree, by the fire.",
        GromIcon::RoofsOverHeads,
    )
    set_shop_item_data(
        gromShop.housesCBought,
        8,
        "Onwards and Upwards",
        "Treehouses seem to be popular with the Moki. How about we add a couple more?",
        GromIcon::OnwardsAndUpwards,
    )
    set_shop_item_data(
        gromShop.removeThornsBought,
        5,
        "Thorny Situation",
        "Those spikey vines all over the place are quite the nuisance, let me tell you. With some help, I could #clear them out# and #make the Glades safer# for everyone!",
        GromIcon::ThornySituation,
    )
    set_shop_item_data(
        gromShop.openCaveBought,
        6,
        "Clear the Cave Entrance",
        "That old cave entrance looks like it's #about to collapse#...but we Gorlek learned a thing or two about tunnelling after fleeing to the mines. With some Ore, I can #repair# it.",
        GromIcon::ClearTheCaveEntrance,
    )
    set_shop_item_data(
        gromShop.beautifyBought,
        10,
        "The Gorlek Touch",
        "The Moki are right...building it only half the work. Nothing's quite complete without some #finishing touches# of decoration.",
        GromIcon::TheGorlekTouch,
    )
    // TODO Tuley
}

on EastPools.FightArenas store(lumaPoolsStateGroup.arenaByteStateSerialized, 4)
on hubUberStateGroup.craftCutsceneState == 1 || hubUberStateGroup.craftCutsceneState == 2 {
    store(hubUberStateGroup.craftCutsceneState, 3)
    store(GladesTown.TwillenGemQuest, true)
}
on InnerWellspring.WaterEscape store(kwolokGroupDescriptor.cleanseWellspringQuestUberState, 3)
on kwolokGroupDescriptor.cleanseWellspringQuestUberState >= 3 store(GladesTown.TuleySpawned, true)
on _petrifiedForestGroup.chaseState == 7 store(_petrifiedForestGroup.chaseState, 8)
on WillowsEnd.MinibossHeart store(willowsEndGroup.laserShooterBossState, 4)
